(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{191:function(t,a,r){"use strict";r.r(a);var _=r(0),v=Object(_.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"react-面向组件编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-面向组件编程"}},[t._v("#")]),t._v(" React 面向组件编程")]),t._v(" "),r("h2",{attrs:{id:"_2-1-基本理解和使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基本理解和使用"}},[t._v("#")]),t._v(" 2.1. 基本理解和使用")]),t._v(" "),r("h3",{attrs:{id:"react的特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react的特点"}},[t._v("#")]),t._v(" React的特点")]),t._v(" "),r("ul",[r("li",[t._v("它使用虚拟DOM而不是真实DOM")]),t._v(" "),r("li",[t._v("它可以用服务端渲染")]),t._v(" "),r("li",[t._v("它遵循单项数据流或数据绑定")])]),t._v(" "),r("h3",{attrs:{id:"react的一些优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react的一些优点"}},[t._v("#")]),t._v(" React的一些优点")]),t._v(" "),r("ul",[r("li",[t._v("提高了应用的性能")]),t._v(" "),r("li",[t._v("可以方便地在客户端和服务器端使用")]),t._v(" "),r("li",[t._v("由于JSX,代码的可读性很好")]),t._v(" "),r("li",[t._v("React很容易与其他框架集成")]),t._v(" "),r("li",[t._v("使用React，编写UI测试用例变得非常容易")])]),t._v(" "),r("h2",{attrs:{id:"_2-2-组件三大属性-1-state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-组件三大属性-1-state"}},[t._v("#")]),t._v(" 2.2. 组件三大属性 1: state")]),t._v(" "),r("h2",{attrs:{id:"_2-3-组件三大属性-2-props"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-组件三大属性-2-props"}},[t._v("#")]),t._v(" 2.3. 组件三大属性 2: props")]),t._v(" "),r("h2",{attrs:{id:"_2-4-组件三大属性-3-refs-与事件处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-组件三大属性-3-refs-与事件处理"}},[t._v("#")]),t._v(" 2.4. 组件三大属性 3: refs 与事件处理")]),t._v(" "),r("h2",{attrs:{id:"_2-5-组件的组合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-组件的组合"}},[t._v("#")]),t._v(" 2.5. 组件的组合")]),t._v(" "),r("h2",{attrs:{id:"_2-6-收集表单数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-收集表单数据"}},[t._v("#")]),t._v(" 2.6. 收集表单数据")]),t._v(" "),r("h2",{attrs:{id:"_2-7-组件生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-组件生命周期"}},[t._v("#")]),t._v(" 2.7. 组件生命周期")]),t._v(" "),r("h2",{attrs:{id:"_2-8-虚拟-dom-与-dom-diff-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-虚拟-dom-与-dom-diff-算法"}},[t._v("#")]),t._v(" 2.8. 虚拟 DOM 与 DOM Diff 算法")]),t._v(" "),r("h3",{attrs:{id:"区分-real-dom-和-virtual-dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#区分-real-dom-和-virtual-dom"}},[t._v("#")]),t._v(" 区分 Real Dom 和 Virtual Dom")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Real Dom")]),t._v(" "),r("th",[t._v("Virtual Dom")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("1.更新缓慢")]),t._v(" "),r("td",[t._v("1.更新更快")])]),t._v(" "),r("tr",[r("td",[t._v("2.可以直接更新 HTML")]),t._v(" "),r("td",[t._v("2.无法直接更新 HTML")])]),t._v(" "),r("tr",[r("td",[t._v("3.如果元素更新，则创建新 DOM")]),t._v(" "),r("td",[t._v("3.如果元素更新，则更新 JSX")])]),t._v(" "),r("tr",[r("td",[t._v("4.DOM 操作代价很高")]),t._v(" "),r("td",[t._v("4.DOM 操作非常简单")])]),t._v(" "),r("tr",[r("td",[t._v("5.消耗的内存较多")]),t._v(" "),r("td",[t._v("5.很少的内存消耗")])])])]),t._v(" "),r("h3",{attrs:{id:"virtual-dom的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#virtual-dom的工作原理"}},[t._v("#")]),t._v(" Virtual DOM的工作原理")]),t._v(" "),r("ul",[r("li",[t._v("Virtual DOM是一个轻量级的JavaScript对象，它最初只是real DOM的副本。它是一个节点树，它将元素、它们的属性和内容作为对象及其属性。React的渲染函数从React组件中创建一个节点树。然后它响应数据模型中变化来更新该树，该变化时有用户或系统完成的各种动作引起的。")]),t._v(" "),r("li",[t._v("每当底层数据发生改变时，整个UI都将在Virtual DOM描述中重新渲染")]),t._v(" "),r("li",[t._v("然后计算之前DOM表示与新DOM之间的差异")]),t._v(" "),r("li",[t._v("完成计算后，将用实际更改的内容更新real DOM")])])])}],!1,null,null,null);a.default=v.exports}}]);